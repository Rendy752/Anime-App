[versions]
agp = "8.11.0"
appUpdateKtx = "2.1.0"
coil = "2.7.0"
commonsText = "1.13.1"
compose-activity = "1.10.1"
compose-adaptive-navigation-suite = "1.4.0-alpha17"
compose-material = "1.7.8"
compose-material3 = "1.3.2"
compose-navigation = "2.9.1"
compose-plugin = "1.8.2"
compose-ui = "1.8.3"
coreKtx = "1.16.0"
coreSplashscreen = "1.0.1"
coreTesting = "2.2.0"
espressoCore = "3.6.1"
hiltAndroid = "2.55"
hiltCompiler = "1.2.0"
junit = "4.13.2"
kotlin = "2.1.10"
kotlinxCoroutinesAndroid = "1.10.2"
kotlinxCoroutinesTest = "1.10.2"
kotlinxSerializationJson = "1.9.0"
ktor = "2.3.12"
legacySupportV4 = "1.0.0"
library = "4.1.0"
lifecycleViewmodelKtxVersion = "2.9.1"
material = "1.12.0"
media3 = "1.7.1"
mockk = "1.14.4"
okhttp = "4.12.0"
prettytime = "5.0.8.Final"
retrofit = "3.0.0"
roomRuntime = "2.7.2"
slf4jSimple = "2.0.17"
sqldelight = "2.1.0"
workRuntimeKtx = "2.10.2"


[libraries]
# ANDROIDX CORE & LIFECYCLE
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleViewmodelKtxVersion" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtxVersion" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }
androidx-legacy-support-v4 = { group = "androidx.legacy", name = "legacy-support-v4", version.ref = "legacySupportV4" }

# ANDROIDX COMPOSE (For androidApp specific dependencies)
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "compose-activity" }
androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "compose-material3" }
androidx-compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "compose-material" }
androidx-compose-navigation = { group = "androidx.navigation", name = "navigation-compose", version.ref = "compose-navigation" }
androidx-compose-ui = { group = "androidx.compose.ui", name = "ui", version.ref = "compose-ui" }
androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "compose-ui" }
androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "compose-ui" }
androidx-compose-ui-text-google-fonts = { group = "androidx.compose.ui", name = "ui-text-google-fonts", version.ref = "compose-ui" }
androidx-compose-windowsizeclass = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "compose-material3" }
androidx-compose-adaptive-navigation-suite = { group = "androidx.compose.material3", name = "material3-adaptive-navigation-suite", version.ref = "compose-adaptive-navigation-suite" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hiltCompiler" }

# ANDROIDX TEST
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTesting" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "compose-ui" }
androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "compose-ui" }


# KOTLIN & COROUTINES
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesTest" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# KTOR (Networking)
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

# SQLDELIGHT (Database)
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4jSimple" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-coroutinesExtensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-driverAndroid = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }

# HILT (DI)
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltAndroid" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hiltAndroid" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hiltAndroid" }

# MISC
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
commons-text = { module = "org.apache.commons:commons-text", version.ref = "commonsText" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
library = { module = "com.github.chuckerteam.chucker:library", version.ref = "library" }
library-no-op = { module = "com.github.chuckerteam.chucker:library-no-op", version.ref = "library" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
prettytime = { module = "org.ocpsoft.prettytime:prettytime", version.ref = "prettytime" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

# MEDIA
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3" }
media3-datasource = { module = "androidx.media3:media3-datasource", version.ref = "media3" }
media3-datasource-okhttp = { module = "androidx.media3:media3-datasource-okhttp", version.ref = "media3" }
media3-exoplayer-hls = { module = "androidx.media3:media3-exoplayer-hls", version.ref = "media3" }

# ROOM
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomRuntime" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomRuntime" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }

# PLAY STORE
app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdateKtx" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

# Compose Plugins
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }